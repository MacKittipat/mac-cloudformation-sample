AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  CognitoUserPoolDomain:
    Type: String
    Default: mac-hello-world
  CognitoIdentifier:
    Type: String
    Default: https://localhost
  ApiReadScope:
    Type: String
    Default: helloworld.read

Resources:

  # HTTP API Gateway
  MacApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: MacApi
      ProtocolType: HTTP

  MacApiRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref MacApi
      RouteKey: 'ANY /{proxy+}'
      Target: !Sub 'integrations/${MacApiIntegration}'

  MacApiIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref MacApi
      Description: HTTP Proxy Integration
      IntegrationType: HTTP_PROXY
      IntegrationMethod: ANY
      IntegrationUri:
        !ImportValue MacPrivateNlbListener
      ConnectionType: VPC_LINK
      ConnectionId:
        !Ref MacApiVpcLink
      PayloadFormatVersion: '1.0'

  MacApiStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: $default
      AutoDeploy: true
      ApiId: !Ref MacApi

  MacApiVpcLink:
    Type: AWS::ApiGatewayV2::VpcLink
    Properties:
      Name: MacApiVpcLink
      SecurityGroupIds:
        - !Ref MacVpcLinkSecurityGroup
      SubnetIds:
        - !ImportValue MacPrivateSubnet1
        - !ImportValue MacPrivateSubnet2

  MacVpcLinkSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: MacVpcLinkSecurityGroup
      GroupDescription: Security group for VPC Link
      VpcId: !ImportValue MacVpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0

  # API Authorizer
  MacAuthorizer:
    Type: AWS::ApiGatewayV2::Authorizer
    Properties:
      Name: MacApiAuthorizer
      ApiId: !Ref MacApi
      AuthorizerType: JWT
      IdentitySource:
        - $request.header.Authorization
      JwtConfiguration:
        Audience:
          - !Ref MacUserPoolClient
        Issuer: !Sub 'https://cognito-idp.${AWS::Region}.amazonaws.com/${MacUserPool}'

  # Cognito
  MacUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: MacUserPool

  MacUserPoolResourceServer:
    Type: AWS::Cognito::UserPoolResourceServer
    Properties:
      UserPoolId: !Ref MacUserPool
      Identifier: !Ref CognitoIdentifier
      Name: !Sub 'MacAPI'
      Scopes:
        - ScopeName: !Ref ApiReadScope
          ScopeDescription: "Read API"

  MacUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      AllowedOAuthFlows:
        - client_credentials
      AllowedOAuthScopes:
        - !Sub '${CognitoIdentifier}/${ApiReadScope}'
      GenerateSecret: true
      ClientName: !Sub 'MacAPI'
      SupportedIdentityProviders:
        - COGNITO
      UserPoolId: !Ref MacUserPool
      RefreshTokenValidity: 1
    DependsOn: MacUserPoolResourceServer

  MacUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      UserPoolId: !Ref MacUserPool
      Domain: !Ref CognitoUserPoolDomain

Outputs:
  MacApiUrl:
    Description: Api Gateway URL
    Value: !Sub https://${MacApi}.execute-api.${AWS::Region}.amazonaws.com/
