AWSTemplateFormatVersion: '2010-09-09'
Description: A sample of setting up EC2 with public VPC

Resources:

  MacVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: false
      EnableDnsSupport: false

  MacPublicSubnet: 
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      VpcId: !Ref MacVpc

  MacIgw:
    Type: AWS::EC2::InternetGateway
  MacIgwAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref MacIgw
      VpcId: !Ref MacVpc

  MacPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MacVpc
  MacPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: MacIgwAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref MacPublicRouteTable
      GatewayId: !Ref MacIgw

  MacSubnetRtAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MacPublicSubnet
      RouteTableId: !Ref MacPublicRouteTable

  MacSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: "Sample Sg"
        VpcId: !Ref MacVpc
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      
  MacEc2Instance: 
    Type: AWS::EC2::Instance
    Properties: 
      InstanceType: t2.nano
      ImageId: ami-0c20b8b385217763f
      KeyName: mac-ec2-kp
      NetworkInterfaces: 
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          GroupSet: 
            - !Ref MacSg
          SubnetId: !Ref MacPublicSubnet
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          cd /home/ubuntu
          echo "hello" >> index.html
          python3 -m http.server 80
